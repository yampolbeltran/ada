#include <QApplication>
#include <QWidget>
#include <QVBoxLayout>
#include <QPushButton>
#include <QTextEdit>
#include <QFileDialog>
#include <QFile>
#include <QTextStream>
#include <QMessageBox>

class FileReaderApp : public QWidget {
    Q_OBJECT

public:
    FileReaderApp(QWidget *parent = nullptr) : QWidget(parent) {
        // Configuración de la ventana principal
        setWindowTitle("Lector de Archivos TXT");
        resize(600, 400);

        // Layout principal
        QVBoxLayout *layout = new QVBoxLayout(this);

        // Botón para abrir archivo
        QPushButton *openButton = new QPushButton("Abrir Archivo", this);
        connect(openButton, &QPushButton::clicked, this, &FileReaderApp::openFile);

        // Área de texto para mostrar contenido del archivo
        textArea = new QTextEdit(this);
        textArea->setReadOnly(true);

        // Agregar widgets al layout
        layout->addWidget(openButton);
        layout->addWidget(textArea);
    }

private slots:
    void openFile() {
        // Mostrar un cuadro de diálogo para seleccionar un archivo
        QString fileName = QFileDialog::getOpenFileName(this, "Seleccionar Archivo", "", "Archivos de texto (*.txt)");
        if (!fileName.isEmpty()) {
            QFile file(fileName);
            if (file.open(QIODevice::ReadOnly | QIODevice::Text)) {
                QTextStream in(&file);
                QString content = in.readAll();
                file.close();
                textArea->setText(content); // Mostrar contenido en el área de texto
            } else {
                QMessageBox::warning(this, "Error", "No se pudo abrir el archivo.");
            }
        }
    }

private:
    QTextEdit *textArea; // Área de texto para mostrar el contenido del archivo
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    FileReaderApp window;
    window.show();
    return app.exec();
}


